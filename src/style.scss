$accent-color: #2f8B9f;
$control-transition: 0.5s;

html, body {
    height: 100%;
    padding: 0;
    margin: 0;
    font-family: 'Noto Sans JP', sans-serif;
}

.material-icons {
    user-select: none;
}

.subtext {
    color: #aaa;
    font-size: 60%;
    font-weight: lighter;
}

#app {
    h6 {
        margin: 0;
        margin-top: 15px;
        margin-bottom: 5px;
        font-family: 'Noto Sans JP', sans-serif;
        font-size: 12px;

        &:first-child {
            margin-top: 0;
        }
    }

    p {
        margin: 0;
        margin-bottom: 15px;
        font-size: 15px;
    }

    input, button, select {
        cursor: pointer;
    }
}

#map {
    position: absolute;
    right: 0;
    z-index: 0;
    height: 100%;
    width: calc(100% - 400px);
    transition: width $control-transition;

    @media screen and (max-width: 1000px) {
        & {
            width: 100%;
        }
    }
}

.leaflet-popup-content {
    overflow-y: scroll;
    max-height: 50vh;
    padding-right: 15px;
}

#control {
    position: absolute;
    box-sizing: border-box;
    z-index: 1;
    overflow-y: auto;
    height: 100%;
    width: 400px;
    padding: 30px 15px;
    padding-bottom: 0px;
    color: #222;
    background-color: #fff;
    transform: translateX(0);
    box-shadow: 0 0 10px 1px hsla(210deg, 83%, 17%, 20%);
    transition: width var(--control-transition), transform $control-transition;

    @media screen and (max-width: 1000px) {
        & {
            transform: translateX(-100%);
            width: min(400px, calc(100% - 50px));
        }
        .control-opened & {
            transform: translateX(0);
        }
    }

    header,
    section {
        margin-bottom: 30px;
    }

    h1 {
        margin: 0;
        margin-bottom: 5px;
        font-size: 200%;
        font-weight: 900;
    }

    a {
        color: inherit;
        text-decoration: none;
        border-bottom: solid 2px;
        padding: 2px;
        margin: -2px;
    }

    a:hover {
        background-color: rgba(0, 0, 0, 0.03);
    }

    .description {
        color: #aaa;
        font-size: 80%;
        font-weight: 500;
    }
}

#gpkg-selector-container {
    box-sizing: border-box;
    width: 100%;
    border: #ddd 3px solid;
    border-radius: 5px;
    margin-bottom: 5px;
}

#gpkg-selector:hover,
#load-sample-button:hover {
    background-color: rgba(0, 0, 0, 0.03);
}

#gpkg-selector {
    box-sizing: border-box;
    display: inline-block;
    width: 100%;
    padding: 10px;

    .gpkg-loading & {
        width: 0;
        padding: 0;
    }
}

#gpkg-selector-loading-text {
    display: none;
    padding: 10px;
    color: #aaa;

    .gpkg-loading & {
        display: inline-block;
    }
}


#load-sample-button {
    padding: 2px 4px;
    color: #aaa;
    background: transparent;
    border: none;
    border-bottom: solid 1px;

    .gpkg-loading & {
        display: none;
    }
}

.layer-control-mover {
    background: none;
    border: none;
    font-size: inherit;
    padding: 0;
}

/* .layer-visibility {
}
.layer-visibility::before {
    content: 'check_box_outline_blank';
    display: block;
}
.layer-visibility:checked:before {
    content: 'check_box';
} */

#control-toggler {
    position: absolute;
    pointer-events: none;
    cursor: pointer;
    top: 10px;
    left: 10px;
    padding: 7px;
    font-size: 200%;
    background-color: white;
    border: none;
    border-radius: 5px;
    box-shadow: 0 0 0 2px rgba(0 0 0 / 20%);
    color: rgba(0, 0, 0, 0.7);
    opacity: 0;
    transition: opacity $control-transition;

    @media screen and (max-width: 1000px) {
        & {
            pointer-events: auto;
            opacity: 1;
        }
    }
}


#fader {
    position: absolute;
    pointer-events: none;
    cursor: pointer;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity $control-transition;

    @media screen and (max-width: 1000px) {
        .control-opened & {
            pointer-events: auto;
            opacity: 1;
        }
    }
}

